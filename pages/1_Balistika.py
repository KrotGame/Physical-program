import streamlit as st
import numpy as np
import plotly.graph_objects as go

# --- –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞ –æ–ø–∏—Å –ø—Ä–æ–≥—Ä–∞–º–∏ ---
st.set_page_config(layout="wide") # –†–æ–±–∏–º–æ —Å—Ç–æ—Ä—ñ–Ω–∫—É —à–∏—Ä—à–æ—é
st.title("üöÄ –Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏–π —Å–∏–º—É–ª—è—Ç–æ—Ä –±–∞–ª—ñ—Å—Ç–∏–∫–∏")
st.write("–î–æ–∑–≤–æ–ª—è—î –∑–º–æ–¥–µ–ª—é–≤–∞—Ç–∏ —Ç—Ä–∞—î–∫—Ç–æ—Ä—ñ—é —Ç—ñ–ª–∞, –∫–∏–Ω—É—Ç–æ–≥–æ –ø—ñ–¥ –∫—É—Ç–æ–º –¥–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç—É. –ó–º—ñ–Ω—é–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –Ω–∞ –±—ñ—á–Ω—ñ–π –ø–∞–Ω–µ–ª—ñ!")

# --- –ë—ñ—á–Ω–∞ –ø–∞–Ω–µ–ª—å (—Å–∞–π–¥–±–∞—Ä) –¥–ª—è –≤–≤–æ–¥—É –¥–∞–Ω–∏—Ö ---
st.sidebar.header("–ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞–ø—É—Å–∫—É")

# –°—Ç–≤–æ—Ä—é—î–º–æ —Å–ª–∞–π–¥–µ—Ä–∏ –¥–ª—è –∑–º—ñ–Ω–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤
v0 = st.sidebar.slider(
    "–ü–æ—á–∞—Ç–∫–æ–≤–∞ —à–≤–∏–¥–∫—ñ—Å—Ç—å (v‚ÇÄ), –º/—Å", 
    min_value=1.0, 
    max_value=100.0, 
    value=50.0, 
    step=1.0
)

angle_degrees = st.sidebar.slider(
    "–ö—É—Ç –∫–∏–¥–∫–∞ (Œ±), –≥—Ä–∞–¥—É—Å–∏", 
    min_value=0.0, 
    max_value=90.0, 
    value=45.0, 
    step=1.0
)

h0 = st.sidebar.slider(
    "–ü–æ—á–∞—Ç–∫–æ–≤–∞ –≤–∏—Å–æ—Ç–∞ (h‚ÇÄ), –º", 
    min_value=0.0, 
    max_value=50.0, 
    value=0.0, 
    step=1.0
)

# –ì—Ä–∞–≤—ñ—Ç–∞—Ü—ñ–π–Ω–∞ —Å—Ç–∞–ª–∞
g = 9.81

# --- –†–æ–∑—Ä–∞—Ö—É–Ω–∫–æ–≤–∞ —á–∞—Å—Ç–∏–Ω–∞ ---

# –ü–µ—Ä–µ–≤–æ–¥–∏–º–æ –∫—É—Ç –≤ —Ä–∞–¥—ñ–∞–Ω–∏
angle_rad = np.deg2rad(angle_degrees)

# –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —á–∞—Å—É –ø–æ–ª—å–æ—Ç—É (—Ä–æ–∑–≤'—è–∑—É—î–º–æ –∫–≤–∞–¥—Ä–∞—Ç–Ω–µ —Ä—ñ–≤–Ω—è–Ω–Ω—è y(t) = 0)
# y(t) = h0 + v0*sin(a)*t - g*t^2 / 2
# a*t^2 + b*t + c = 0, –¥–µ a = -g/2, b = v0*sin(a), c = h0
a = -g / 2
b = v0 * np.sin(angle_rad)
c = h0
discriminant = b**2 - 4*a*c
t_flight = (-b - np.sqrt(discriminant)) / (2 * a) # –ë–µ—Ä–µ–º–æ –¥–æ–¥–∞—Ç–Ω–∏–π –∫–æ—Ä—ñ–Ω—å

# –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ—ó –¥–∞–ª—å–Ω–æ—Å—Ç—ñ
x_max = v0 * np.cos(angle_rad) * t_flight

# –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ—ó –≤–∏—Å–æ—Ç–∏
t_peak = v0 * np.sin(angle_rad) / g
y_max = h0 + v0 * np.sin(angle_rad) * t_peak - g * t_peak**2 / 2

# --- –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö ---
st.header("–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ —Å–∏–º—É–ª—è—Ü—ñ—ó")
col1, col2, col3 = st.columns(3) # –†–æ–∑–¥—ñ–ª—è—î–º–æ –Ω–∞ 3 –∫–æ–ª–æ–Ω–∫–∏
col1.metric("–ú–∞–∫—Å. –¥–∞–ª—å–Ω—ñ—Å—Ç—å (L)", f"{x_max:.2f} –º")
col2.metric("–ú–∞–∫—Å. –≤–∏—Å–æ—Ç–∞ (H)", f"{y_max:.2f} –º")
col3.metric("–ß–∞—Å –ø–æ–ª—å–æ—Ç—É (T)", f"{t_flight:.2f} —Å")

# --- –ì—Ä–∞—Ñ—ñ–∫ —Ç—Ä–∞—î–∫—Ç–æ—Ä—ñ—ó (–∑ Plotly) ---
st.header("–ì—Ä–∞—Ñ—ñ–∫ —Ç—Ä–∞—î–∫—Ç–æ—Ä—ñ—ó")

# –ì–µ–Ω–µ—Ä—É—î–º–æ 100 —Ç–æ—á–æ–∫ –¥–ª—è –ø–ª–∞–≤–Ω–æ—ó –∫—Ä–∏–≤–æ—ó
t_values = np.linspace(0, t_flight, 100)
x_values = v0 * np.cos(angle_rad) * t_values
y_values = h0 + v0 * np.sin(angle_rad) * t_values - (g * t_values**2) / 2

# –°—Ç–≤–æ—Ä—é—î–º–æ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏–π –≥—Ä–∞—Ñ—ñ–∫ Plotly
fig = go.Figure()
fig.add_trace(go.Scatter(
    x=x_values, 
    y=y_values, 
    mode='lines', 
    name='–¢—Ä–∞—î–∫—Ç–æ—Ä—ñ—è',
    line=dict(color='royalblue', width=4)
))

# –î–æ–¥–∞—î–º–æ —Ç–æ—á–∫—É —Å—Ç–∞—Ä—Ç—É —ñ —Ñ—ñ–Ω—ñ—à—É
fig.add_trace(go.Scatter(
    x=[0, x_max], 
    y=[h0, 0], 
    mode='markers', 
    name='–°—Ç–∞—Ä—Ç/–§—ñ–Ω—ñ—à',
    marker=dict(color='red', size=10)
))

# –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –≤–∏–≥–ª—è–¥ –≥—Ä–∞—Ñ—ñ–∫–∞
fig.update_layout(
    xaxis_title="–î–∞–ª—å–Ω—ñ—Å—Ç—å (x), –º",
    yaxis_title="–í–∏—Å–æ—Ç–∞ (y), –º",
    xaxis=dict(range=[0, x_max * 1.1]), # –î–∞—î–º–æ —Ç—Ä–æ—Ö–∏ –º—ñ—Å—Ü—è
    yaxis=dict(range=[0, y_max * 1.1]),
    title="–¢—Ä–∞—î–∫—Ç–æ—Ä—ñ—è –ø–æ–ª—å–æ—Ç—É",
    height=500 # –í–∏—Å–æ—Ç–∞ –≥—Ä–∞—Ñ—ñ–∫–∞
)

# –í–ê–ñ–õ–ò–í–û: —Ä–æ–±–∏–º–æ –æ—Å—ñ —Ä—ñ–≤–Ω–æ–º–∞—Å—à—Ç–∞–±–Ω–∏–º–∏
fig.update_yaxes(scaleanchor="x", scaleratio=1)

# –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –≥—Ä–∞—Ñ—ñ–∫ —É Streamlit
st.plotly_chart(fig, use_container_width=True)
