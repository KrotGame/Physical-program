import streamlit as st
import numpy as np
import plotly.graph_objects as go

st.title("üßä 3D-–í—ñ–∑—É–∞–ª—ñ–∑–∞—Ç–æ—Ä –∫—É–±—ñ—á–Ω–∏—Ö “ë—Ä–∞—Ç–æ–∫ –ë—Ä–∞–≤–µ")
st.write("–ü–æ–∫–∞–∑—É—î —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è –∞—Ç–æ–º—ñ–≤ —Ç–∞ —Ä–æ–∑—Ä–∞—Ö–æ–≤—É—î –∫–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç –ø–∞–∫—É–≤–∞–Ω–Ω—è.")

lattice_type = st.selectbox(
    "–û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –∫—É–±—ñ—á–Ω–æ—ó “ë—Ä–∞—Ç–∫–∏:",
    ("–ü—Ä–æ—Å—Ç–∞ –∫—É–±—ñ—á–Ω–∞ (–ü–ö)", 
     "–û–±'—î–º–Ω–æ-—Ü–µ–Ω—Ç—Ä–æ–≤–∞–Ω–∞ –∫—É–±—ñ—á–Ω–∞ (–û–¶–ö)", 
     "–ì—Ä–∞ –Ω–µ-—Ü–µ–Ω—Ç—Ä–æ–≤–∞–Ω–∞ –∫—É–±—ñ—á–Ω–∞ (–ì–¶–ö)")
)

# --- –†–æ–∑—Ä–∞—Ö—É–Ω–∫–æ–≤–∞ —á–∞—Å—Ç–∏–Ω–∞ ---

# --- –†–æ–∑—Ä–∞—Ö—É–Ω–∫–æ–≤–∞ —á–∞—Å—Ç–∏–Ω–∞ ---

# –ê—Ç–æ–º–∏ (x, y, z) –≤ –º–µ–∂–∞—Ö –∫–æ–º—ñ—Ä–∫–∏ [0, 1]
atoms = {
    '–ü–ö': np.array([[0, 0, 0]]),
    '–û–¶–ö': np.array([[0, 0, 0], [0.5, 0.5, 0.5]]),
    '–ì–¶–ö': np.array([
        [0, 0, 0], 
        [0.5, 0.5, 0], 
        [0.5, 0, 0.5], 
        [0, 0.5, 0.5]
    ])
}

# –ê—Ç–æ–º–∏ –¥–ª—è –≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—ó (–≤–∫–ª—é—á–∞—é—á–∏ —Å—É—Å—ñ–¥–Ω—ñ –∫–æ–º—ñ—Ä–∫–∏ –¥–ª—è –ø–æ–≤–Ω–æ—Ç–∏)
viz_atoms = {
    '–ü–ö': np.array([
        [0, 0, 0], [1, 0, 0], [0, 1, 0], [0, 0, 1],
        [1, 1, 0], [1, 0, 1], [0, 1, 1], [1, 1, 1]
    ]),
    '–û–¶–ö': np.array([
        [0, 0, 0], [1, 0, 0], [0, 1, 0], [0, 0, 1],
        [1, 1, 0], [1, 0, 1], [0, 1, 1], [1, 1, 1],
        [0.5, 0.5, 0.5] # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∏–π
    ]),
    '–ì–¶–ö': np.array([
        # –í–µ—Ä—à–∏–Ω–∏
        [0, 0, 0], [1, 0, 0], [0, 1, 0], [0, 0, 1],
        [1, 1, 0], [1, 0, 1], [0, 1, 1], [1, 1, 1],
        # –ì—Ä–∞–Ω—ñ
        [0.5, 0.5, 0], [0.5, 0.5, 1], # xy
        [0.5, 0, 0.5], [0.5, 1, 0.5], # xz
        [0, 0.5, 0.5], [1, 0.5, 0.5]  # yz
    ])
}

# –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ “ë—Ä–∞—Ç–æ–∫
params = {
    '–ü–ö': {
        'atoms_per_cell': 1, # 8 –≤–µ—Ä—à–∏–Ω * (1/8)
        'coord_num': 6,
        'a_R_relation': "a = 2R",
        'apf_formula': "(1 * 4/3 * pi * (a/2)¬≥) / a¬≥",
        'apf': (np.pi / 6)
    },
    '–û–¶–ö': {
        'atoms_per_cell': 2, # (8 * 1/8) + 1 (—Ü–µ–Ω—Ç—Ä)
        'coord_num': 8,
        'a_R_relation': "a‚àö3 = 4R",
        'apf_formula': "(2 * 4/3 * pi * (a‚àö3 / 4)¬≥) / a¬≥",
        'apf': (np.pi * np.sqrt(3) / 8)
    },
    '–ì–¶–ö': {
        'atoms_per_cell': 4, # (8 * 1/8) + (6 * 1/2)
        'coord_num': 12,
        'a_R_relation': "a‚àö2 = 4R",
        'apf_formula': "(4 * 4/3 * pi * (a‚àö2 / 4)¬≥) / a¬≥",
        'apf': (np.pi / (3 * np.sqrt(2)))
    }
}

# *** –¶–ï –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø –î–õ–Ø 'KeyError' ***
current_type = lattice_type.split(' ')[-1].strip("()")

# *** –¶–Ü –†–Ø–î–ö–ò –ú–ê–Æ–¢–¨ –ë–£–¢–ò, –í–û–ù–ò –°–¢–í–û–†–Æ–Æ–¢–¨ –ó–ú–Ü–ù–ù–Ü ***
current_params = params[current_type]
current_atoms = viz_atoms[current_type]


# --- –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ ---
st.header(f"–ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –¥–ª—è: {lattice_type}")

col1, col2, col3 = st.columns(3)
# –¢–µ–ø–µ—Ä —Ü–µ–π —Ä—è–¥–æ–∫ (line 84) –º–∞—î —Å–ø—Ä–∞—Ü—é–≤–∞—Ç–∏
col1.metric("–ê—Ç–æ–º—ñ–≤ –Ω–∞ –∫–æ–º—ñ—Ä–∫—É", current_params['atoms_per_cell'])
col2.metric("–ö–æ–æ—Ä–¥–∏–Ω–∞—Ü—ñ–π–Ω–µ —á–∏—Å–ª–æ", current_params['coord_num'])
col3.metric("–ö–æ–µ—Ñ. –ø–∞–∫—É–≤–∞–Ω–Ω—è (APF)", f"{current_params['apf'] * 100:.1f} %")

st.subheader("–†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ APF")
# *** –¶–ï –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø –î–õ–Ø 'SyntaxError' (–ø—Ä–∏–±—Ä–∞–Ω–æ 'f') ***
st.latex("a \\text{ (–ø–∞—Ä–∞–º–µ—Ç—Ä “ë—Ä–∞—Ç–∫–∏)}, R \\text{ (—Ä–∞–¥—ñ—É—Å –∞—Ç–æ–º–∞)}")
# –ê —Ç—É—Ç 'f' –∑–∞–ª–∏—à–∞—é—Ç—å—Å—è, –±–æ –≤–æ–Ω–∏ –ø–æ—Ç—Ä—ñ–±–Ω—ñ
st.latex(f"\\text{{–°–ø—ñ–≤–≤—ñ–¥–Ω–æ—à–µ–Ω–Ω—è: }} {current_params['a_R_relation']}")
st.latex(f"APF = \\frac{{N_{{atoms}} \\cdot V_{{atom}}}}{{V_{{cell}}}} = {current_params['apf_formula']} \\approx {current_params['apf']:.3f}")

# --- 3D –ì—Ä–∞—Ñ—ñ–∫ ---
st.header("3D –í—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—è")
fig = go.Figure()

# 1. –ê—Ç–æ–º–∏
fig.add_trace(go.Scatter3d(
    x=current_atoms[:, 0],
    y=current_atoms[:, 1],
    z=current_atoms[:, 2],
    mode='markers',
    marker=dict(color='red', size=10, symbol='circle'),
    name='–ê—Ç–æ–º–∏'
))

# 2. –†–µ–±—Ä–∞ –∫—É–±–∞ (–∫–æ–º—ñ—Ä–∫–∏)
def add_cube_edges(fig):
    edges = [
        (0,1), (1,3), (3,2), (2,0), # bottom
        (4,5), (5,7), (7,6), (6,4), # top
        (0,4), (1,5), (2,6), (3,7)  # vertical
    ]
    vertices = np.array([
        [0,0,0], [1,0,0], [0,1,0], [1,1,0],
        [0,0,1], [1,0,1], [0,1,1], [1,1,1]
    ])
    for edge in edges:
        p1 = vertices[edge[0]]
        p2 = vertices[edge[1]]
        fig.add_trace(go.Scatter3d(
            x=[p1[0], p2[0]], y=[p1[1], p2[1]], z=[p1[2], p2[2]],
            mode='lines', line=dict(color='black', width=3),
            showlegend=False
        ))
add_cube_edges(fig)

fig.update_layout(
    title="–ï–ª–µ–º–µ–Ω—Ç–∞—Ä–Ω–∞ –∫–æ–º—ñ—Ä–∫–∞",
    scene=dict(
        xaxis=dict(range=[-0.1, 1.1], title='a'),
        yaxis=dict(range=[-0.1, 1.1], title='b'),
        zaxis=dict(range=[-0.1, 1.1], title='c'),
        aspectratio=dict(x=1, y=1, z=1)
    ),
    margin=dict(l=0, r=0, b=0, t=40)
)
st.plotly_chart(fig, use_container_width=True)