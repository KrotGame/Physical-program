import streamlit as st
import numpy as np
import plotly.graph_objects as go
import scipy.constants as const

st.title("üî≥ –ß–∞—Å—Ç–∏–Ω–∫–∞ —É 1D –ø–æ—Ç–µ–Ω—Ü—ñ–∞–ª—å–Ω–æ–º—É —è—â–∏–∫—É")
st.write("–í—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—è —Ö–≤–∏–ª—å–æ–≤–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π (Œ®) —Ç–∞ –≥—É—Å—Ç–∏–Ω–∏ –π–º–æ–≤—ñ—Ä–Ω–æ—Å—Ç—ñ (Œ®¬≤) –¥–ª—è —Å—Ç–∞—Ü—ñ–æ–Ω–∞—Ä–Ω–æ–≥–æ —Ä—ñ–≤–Ω—è–Ω–Ω—è –®—Ä–µ–¥—ñ–Ω–≥–µ—Ä–∞ (—Ç–µ–º–∞ –õ.5).")

# --- –ë—ñ—á–Ω–∞ –ø–∞–Ω–µ–ª—å ---
st.sidebar.header("–ü–∞—Ä–∞–º–µ—Ç—Ä–∏ —è—â–∏–∫–∞")
L_pm = st.sidebar.slider("–®–∏—Ä–∏–Ω–∞ —è—â–∏–∫–∞ (L), –ø—ñ–∫–æ–º–µ—Ç—Ä–∏", 50, 1000, 100, step=10)
L = L_pm * 1e-12 # –ü–µ—Ä–µ–≤–æ–¥–∏–º–æ –≤ –º–µ—Ç—Ä–∏

n = st.sidebar.slider("–ö–≤–∞–Ω—Ç–æ–≤–µ —á–∏—Å–ª–æ (n)", 1, 10, 1, step=1, 
                      help="–û—Å–Ω–æ–≤–Ω–∏–π (n=1), –ø–µ—Ä—à–∏–π –∑–±—É–¥–∂–µ–Ω–∏–π (n=2), ...")

# –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –º–∞—Å—É –µ–ª–µ–∫—Ç—Ä–æ–Ω–∞
m = const.electron_mass
hbar = const.hbar

# --- –†–æ–∑—Ä–∞—Ö—É–Ω–∫–æ–≤–∞ —á–∞—Å—Ç–∏–Ω–∞ ---

# 1. –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –µ–Ω–µ—Ä–≥—ñ—ó
# E_n = (n^2 * pi^2 * hbar^2) / (2 * m * L^2)
E_joules = (n**2 * np.pi**2 * hbar**2) / (2 * m * L**2)
E_eV = E_joules / const.electron_volt # –ü–µ—Ä–µ–≤–æ–¥–∏–º–æ –≤ –µ–ª–µ–∫—Ç—Ä–æ–Ω-–≤–æ–ª—å—Ç–∏

st.header(f"–†—ñ–≤–µ–Ω—å n = {n}")
st.metric("–ï–Ω–µ—Ä–≥—ñ—è —Ä—ñ–≤–Ω—è (E‚Çô)", f"{E_eV:.3f} –µ–í (–µ–ª–µ–∫—Ç—Ä–æ–Ω-–≤–æ–ª—å—Ç)")

# 2. –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –¥–ª—è –≥—Ä–∞—Ñ—ñ–∫–∞
x = np.linspace(0, L, 500) # 500 —Ç–æ—á–æ–∫ –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ —è—â–∏–∫–∞

# –•–≤–∏–ª—å–æ–≤–∞ —Ñ—É–Ω–∫—Ü—ñ—è: Psi(x) = sqrt(2/L) * sin(n * pi * x / L)
psi = np.sqrt(2/L) * np.sin(n * np.pi * x / L)

# –ì—É—Å—Ç–∏–Ω–∞ –π–º–æ–≤—ñ—Ä–Ω–æ—Å—Ç—ñ: |Psi(x)|^2
prob_density = psi**2

# --- –ì—Ä–∞—Ñ—ñ–∫–∏ ---

# –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ x –≤ –ø—ñ–∫–æ–º–µ—Ç—Ä–∏ –¥–ª—è –≥–∞—Ä–Ω–æ–≥–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
x_pm = x * 1e12

# –ì—Ä–∞—Ñ—ñ–∫ 1: –•–≤–∏–ª—å–æ–≤–∞ —Ñ—É–Ω–∫—Ü—ñ—è
st.subheader("–•–≤–∏–ª—å–æ–≤–∞ —Ñ—É–Ω–∫—Ü—ñ—è (Œ®)")
fig_psi = go.Figure()

# –ü–æ—Ç–µ–Ω—Ü—ñ–∞–ª—å–Ω—ñ —Å—Ç—ñ–Ω–∫–∏ (–¥–ª—è –≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—ó)
fig_psi.add_trace(go.Scatter(x=[0, 0], y=[-np.max(np.abs(psi))*1.2, np.max(np.abs(psi))*1.2], 
                            mode='lines', line=dict(color='black', width=3), name='–°—Ç—ñ–Ω–∫–∞'))
fig_psi.add_trace(go.Scatter(x=[L_pm, L_pm], y=[-np.max(np.abs(psi))*1.2, np.max(np.abs(psi))*1.2], 
                            mode='lines', line=dict(color='black', width=3), name='–°—Ç—ñ–Ω–∫–∞'))

# –°–∞–º–∞ —Ö–≤–∏–ª—å–æ–≤–∞ —Ñ—É–Ω–∫—Ü—ñ—è
fig_psi.add_trace(go.Scatter(x=x_pm, y=psi, mode='lines', 
                            line=dict(color='blue', width=3), name=f"Œ® (n={n})"))
# –ù—É–ª—å–æ–≤–∞ –ª—ñ–Ω—ñ—è
fig_psi.add_trace(go.Scatter(x=x_pm, y=np.zeros_like(x_pm), mode='lines', 
                            line=dict(color='gray', width=1, dash='dot'), name='y=0'))

fig_psi.update_layout(
    xaxis_title="–ü–æ–∑–∏—Ü—ñ—è (x), –ø–º",
    yaxis_title="–ê–º–ø–ª—ñ—Ç—É–¥–∞ (Œ®)",
    showlegend=False
)
st.plotly_chart(fig_psi, use_container_width=True)

# –ì—Ä–∞—Ñ—ñ–∫ 2: –ì—É—Å—Ç–∏–Ω–∞ –π–º–æ–≤—ñ—Ä–Ω–æ—Å—Ç—ñ
st.subheader("–ì—É—Å—Ç–∏–Ω–∞ –π–º–æ–≤—ñ—Ä–Ω–æ—Å—Ç—ñ (Œ®¬≤)")
st.write("–ü–æ–∫–∞–∑—É—î, –¥–µ –Ω–∞–π—ñ–º–æ–≤—ñ—Ä–Ω—ñ—à–µ –∑–Ω–∞–π—Ç–∏ —á–∞—Å—Ç–∏–Ω–∫—É.")
fig_prob = go.Figure()

# –°—Ç—ñ–Ω–∫–∏
fig_prob.add_trace(go.Scatter(x=[0, 0], y=[0, np.max(prob_density)*1.2], 
                             mode='lines', line=dict(color='black', width=3), name='–°—Ç—ñ–Ω–∫–∞'))
fig_prob.add_trace(go.Scatter(x=[L_pm, L_pm], y=[0, np.max(prob_density)*1.2], 
                             mode='lines', line=dict(color='black', width=3), name='–°—Ç—ñ–Ω–∫–∞'))

# –ì—É—Å—Ç–∏–Ω–∞ –π–º–æ–≤—ñ—Ä–Ω–æ—Å—Ç—ñ
fig_prob.add_trace(go.Scatter(x=x_pm, y=prob_density, mode='lines', 
                             line=dict(color='red', width=3), name=f"|Œ®|¬≤ (n={n})"))

fig_prob.update_layout(
    xaxis_title="–ü–æ–∑–∏—Ü—ñ—è (x), –ø–º",
    yaxis_title="–ô–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å (|Œ®|¬≤)",
    showlegend=False
)
st.plotly_chart(fig_prob, use_container_width=True)