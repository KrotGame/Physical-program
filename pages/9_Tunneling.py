import streamlit as st
import numpy as np
import plotly.graph_objects as go
import scipy.constants as const

st.title("üëª –ö–≤–∞–Ω—Ç–æ–≤–µ —Ç—É–Ω–µ–ª—é–≤–∞–Ω–Ω—è —á–µ—Ä–µ–∑ –±–∞—Ä'—î—Ä")
st.write("–í—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—è —Ö–≤–∏–ª—å–æ–≤–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó —á–∞—Å—Ç–∏–Ω–∫–∏, —â–æ –Ω–∞–ª—ñ—Ç–∞—î –Ω–∞ –ø–æ—Ç–µ–Ω—Ü—ñ–π–Ω–∏–π –±–∞—Ä'—î—Ä.")

# --- –í–≤–µ–¥–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö ---
st.sidebar.header("–ü–∞—Ä–∞–º–µ—Ç—Ä–∏")
E_eV = st.sidebar.slider("–ï–Ω–µ—Ä–≥—ñ—è —á–∞—Å—Ç–∏–Ω–∫–∏ (E), –µ–í", 0.1, 10.0, 5.0, 0.1)
V0_eV = st.sidebar.slider("–í–∏—Å–æ—Ç–∞ –±–∞—Ä'—î—Ä—É (V‚ÇÄ), –µ–í", E_eV + 0.1, 20.0, 10.0, 0.1,
                          help="V‚ÇÄ –º–∞—î –±—É—Ç–∏ –±—ñ–ª—å—à–∏–º –∑–∞ E –¥–ª—è —Ç—É–Ω–µ–ª—é–≤–∞–Ω–Ω—è.")
L_pm = st.sidebar.slider("–®–∏—Ä–∏–Ω–∞ –±–∞—Ä'—î—Ä—É (L), –ø–º", 10, 200, 50, 5)

m = const.electron_mass # –ú–∞—Å–∞ –µ–ª–µ–∫—Ç—Ä–æ–Ω–∞

# –ü–µ—Ä–µ–≤–æ–¥–∏–º–æ –≤—Å–µ –≤ –°–Ü
E = E_eV * const.electron_volt
V0 = V0_eV * const.electron_volt
L = L_pm * 1e-12
hbar = const.hbar

# --- –†–æ–∑—Ä–∞—Ö—É–Ω–∫–æ–≤–∞ —á–∞—Å—Ç–∏–Ω–∞ ---

# 1. –•–≤–∏–ª—å–æ–≤—ñ —á–∏—Å–ª–∞
k1 = np.sqrt(2 * m * E) / hbar             # –û–±–ª–∞—Å—Ç—å I (–∑–ª—ñ–≤–∞, x < 0)
k2 = np.sqrt(2 * m * (V0 - E)) / hbar    # –û–±–ª–∞—Å—Ç—å II (–±–∞—Ä'—î—Ä, 0 < x < L)
k3 = k1                                    # –û–±–ª–∞—Å—Ç—å III (—Å–ø—Ä–∞–≤–∞, x > L)

# 2. –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –∫–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç–∞ –ø—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è (T)
# –§–æ—Ä–º—É–ª–∞ –ì—Ä—ñ—Ñ—ñ—Ç—Å–∞ –¥–ª—è T
numerator = (2 * k1 * k2)**2
denominator = (k2**2 - k1**2)**2 * np.sinh(k2 * L)**2 + (2 * k1 * k2)**2 * np.cosh(k2 * L)**2
T = numerator / denominator

st.header("–ô–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å —Ç—É–Ω–µ–ª—é–≤–∞–Ω–Ω—è")
st.metric("–ö–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è (T)", f"{T:.3e}",
          help="–ô–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å —Ç–æ–≥–æ, —â–æ —á–∞—Å—Ç–∏–Ω–∫–∞ –ø—Ä–æ–π–¥–µ –∫—Ä—ñ–∑—å –±–∞—Ä'—î—Ä.")

# --- –ì—Ä–∞—Ñ—ñ–∫ ---
st.header("–í—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—è —Ö–≤–∏–ª—å–æ–≤–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó (Re[Œ®])")

# 3. –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –∞–º–ø–ª—ñ—Ç—É–¥ –¥–ª—è –≥—Ä–∞—Ñ—ñ–∫–∞ (–¥—É–∂–µ —Å–ø—Ä–æ—â–µ–Ω–æ, –ª–∏—à–µ –¥–ª—è –≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—ó!)
# –ú–∏ –Ω–µ –±—É–¥–µ–º–æ —Ç–æ—á–Ω–æ —Ä–æ–∑–≤'—è–∑—É–≤–∞—Ç–∏ —Å–∏—Å—Ç–µ–º—É, –∞ –ø–æ–∫–∞–∂–µ–º–æ –∑–∞–≥–∞–ª—å–Ω–∏–π –≤–∏–≥–ª—è–¥:
# A * e^(ik1*x) + B * e^(-ik1*x) | C * e^(-k2*x) + D * e^(k2*x) | F * e^(ik1*x)
# –¶–µ —Å–∫–ª–∞–¥–Ω–æ. –î–ª—è –≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—ó –º–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∂–µ–º–æ –∑–∞—Ç—É—Ö–∞—é—á—É –µ–∫—Å–ø–æ–Ω–µ–Ω—Ç—É —Ç–∞ —Å–∏–Ω—É—Å–æ—ó–¥–∏
x_left = np.linspace(-L*2, 0, 100)
x_barrier = np.linspace(0, L, 50)
x_right = np.linspace(L, L*3, 100)

# –ê–º–ø–ª—ñ—Ç—É–¥–∏ (–ø—Ä–∏–±–ª–∏–∑–Ω—ñ, –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ—ó –∫–∞—Ä—Ç–∏–Ω–∫–∏)
A = 1 # –í—Ö—ñ–¥–Ω–∞ —Ö–≤–∏–ª—è
F = np.sqrt(T) # –•–≤–∏–ª—è, —â–æ –ø—Ä–æ–π—à–ª–∞
R = np.sqrt(1 - T) # –í—ñ–¥–±–∏—Ç–∞ —Ö–≤–∏–ª—è

psi_left = A * np.cos(k1 * x_left) + R * np.cos(-k1 * x_left + np.pi) # –°—Ç–æ—è—á–∞ —Ö–≤–∏–ª—è
psi_barrier = (A+R)/2 * np.exp(-k2 * x_barrier) # –ó–∞—Ç—É—Ö–∞–Ω–Ω—è (–¥—É–∂–µ –≥—Ä—É–±–µ —Å–ø—Ä–æ—â–µ–Ω–Ω—è)
psi_right = F * np.cos(k1 * (x_right - L)) # –ë—ñ–∂—É—á–∞ —Ö–≤–∏–ª—è

# –ü–µ—Ä–µ–≤–æ–¥–∏–º–æ x –≤ –ø—ñ–∫–æ–º–µ—Ç—Ä–∏
x_plot = np.concatenate((x_left, x_barrier, x_right)) * 1e12
psi_plot = np.concatenate((psi_left, psi_barrier, psi_right))

fig = go.Figure()

# –•–≤–∏–ª—å–æ–≤–∞ —Ñ—É–Ω–∫—Ü—ñ—è
fig.add_trace(go.Scatter(x=x_plot, y=psi_plot, mode='lines', name='Re[Œ®(x)]',
                         line=dict(color='blue', width=3)))

# –ü–æ—Ç–µ–Ω—Ü—ñ–π–Ω–∏–π –±–∞—Ä'—î—Ä
fig.add_trace(go.Scatter(
    x=[0, 0, L_pm, L_pm],
    y=[0, V0_eV, V0_eV, 0],
    fill="tozeroy",
    fillcolor="rgba(255, 0, 0, 0.2)",
    line=dict(color="red", width=2, dash='dot'),
    name='–ë–∞—Ä\'—î—Ä (V‚ÇÄ)'
))

# –ï–Ω–µ—Ä–≥—ñ—è —á–∞—Å—Ç–∏–Ω–∫–∏
fig.add_trace(go.Scatter(x=[np.min(x_plot), np.max(x_plot)], y=[E_eV, E_eV],
                         mode='lines', line=dict(color='green', width=2, dash='dash'),
                         name='–ï–Ω–µ—Ä–≥—ñ—è (E)'))

fig.update_layout(
    title="–†–µ–∞–ª—å–Ω–∞ —á–∞—Å—Ç–∏–Ω–∞ —Ö–≤–∏–ª—å–æ–≤–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó",
    xaxis_title="–ü–æ–∑–∏—Ü—ñ—è (x), –ø–º",
    yaxis_title="–ï–Ω–µ—Ä–≥—ñ—è (—É–º–æ–≤–Ω—ñ –æ–¥–∏–Ω–∏—Ü—ñ)",
    legend=dict(orientation="h", yanchor="bottom", y=1.02, xanchor="right", x=1)
)
st.plotly_chart(fig, use_container_width=True)
st.info("–ü—Ä–∏–º—ñ—Ç–∫–∞: –ì—Ä–∞—Ñ—ñ–∫ —Ö–≤–∏–ª—å–æ–≤–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó —î —Å–ø—Ä–æ—â–µ–Ω–æ—é –≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—î—é —ñ –Ω–µ —î —Ç–æ—á–Ω–∏–º —Ä–æ–∑–≤'—è–∑–∫–æ–º —Ä—ñ–≤–Ω—è–Ω–Ω—è –®—Ä–µ–¥—ñ–Ω–≥–µ—Ä–∞, –∞–ª–µ —è–∫—ñ—Å–Ω–æ –ø–æ–∫–∞–∑—É—î –µ—Ñ–µ–∫—Ç –∑–∞—Ç—É—Ö–∞–Ω–Ω—è —Ç–∞ –ø—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è.")