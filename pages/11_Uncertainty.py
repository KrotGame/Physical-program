import streamlit as st
import numpy as np
import plotly.graph_objects as go
from scipy.fft import fft, fftfreq, fftshift
import scipy.constants as const

st.title("üåä –í—ñ–∑—É–∞–ª—ñ–∑–∞—Ç–æ—Ä –ø—Ä–∏–Ω—Ü–∏–ø—É –Ω–µ–≤–∏–∑–Ω–∞—á–µ–Ω–æ—Å—Ç—ñ")
st.write("–ü–æ–∫–∞–∑—É—î –∑–≤'—è–∑–æ–∫ –º—ñ–∂ –ø–æ–ª–æ–∂–µ–Ω–Ω—è–º (Œîx) —Ç–∞ —ñ–º–ø—É–ª—å—Å–æ–º (Œîp) —á–∞—Å—Ç–∏–Ω–∫–∏.")
st.latex(r"\Delta x \cdot \Delta p \geq \frac{\hbar}{2}")

# --- –í–≤–µ–¥–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö ---
st.sidebar.header("–ü–∞—Ä–∞–º–µ—Ç—Ä–∏ —Ö–≤–∏–ª—å–æ–≤–æ–≥–æ –ø–∞–∫–µ—Ç—É")
st.write("–•–≤–∏–ª—å–æ–≤–∏–π –ø–∞–∫–µ—Ç –º–æ–¥–µ–ª—é—î—Ç—å—Å—è –ì–∞—É—Å—Å–æ–≤–æ—é —Ñ—É–Ω–∫—Ü—ñ—î—é.")

delta_x_pm = st.sidebar.slider("–ù–µ–≤–∏–∑–Ω–∞—á–µ–Ω—ñ—Å—Ç—å –ø–æ–ª–æ–∂–µ–Ω–Ω—è (Œîx), –ø–º", 1.0, 100.0, 20.0, 1.0)
delta_x = delta_x_pm * 1e-12 # –ü–µ—Ä–µ–≤–æ–¥–∏–º–æ –≤ –º–µ—Ç—Ä–∏

# --- –†–æ–∑—Ä–∞—Ö—É–Ω–∫–æ–≤–∞ —á–∞—Å—Ç–∏–Ω–∞ ---

# 1. –°—Ç–≤–æ—Ä—é—î–º–æ –ø—Ä–æ—Å—Ç—ñ—Ä x
# –ß–∏–º —à–∏—Ä—à–∏–π –¥—ñ–∞–ø–∞–∑–æ–Ω, —Ç–∏–º –∫—Ä–∞—â–∏–π –§—É—Ä'—î-–∞–Ω–∞–ª—ñ–∑
N = 2048 # –ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ—á–æ–∫ (–∫—Ä–∞—â–µ —Å—Ç–µ–ø—ñ–Ω—å 2)
x_max = delta_x * 50 # –ë–µ—Ä–µ–º–æ –≤–µ–ª–∏–∫–∏–π –¥—ñ–∞–ø–∞–∑–æ–Ω
x = np.linspace(-x_max, x_max, N)

# 2. –•–≤–∏–ª—å–æ–≤–∞ —Ñ—É–Ω–∫—Ü—ñ—è –≤ x-–ø—Ä–æ—Å—Ç–æ—Ä—ñ (–ì–∞—É—Å—Å—ñ–≤ –ø–∞–∫–µ—Ç)
# Psi(x) ~ exp(-x¬≤ / (4 * delta_x¬≤))
# –ú–∏ –±—É–¥–µ–º–æ –º–∞–ª—é–≤–∞—Ç–∏ |Psi(x)|¬≤
psi_x_sq = np.exp(-x**2 / (2 * delta_x**2))
psi_x_sq = psi_x_sq / np.sum(psi_x_sq) # –ù–æ—Ä–º—É—î–º–æ (–¥–ª—è –≤–∏–≥–ª—è–¥—É)

# 3. –•–≤–∏–ª—å–æ–≤–∞ —Ñ—É–Ω–∫—Ü—ñ—è –≤ k-–ø—Ä–æ—Å—Ç–æ—Ä—ñ (–§—É—Ä'—î-–æ–±—Ä–∞–∑)
# –§—É—Ä'—î-–æ–±—Ä–∞–∑ –ì–∞—É—Å—Å–æ–≤–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó - —Ü–µ —Ç–µ–∂ –ì–∞—É—Å—Å–æ–≤–∞ —Ñ—É–Ω–∫—Ü—ñ—è
# –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –®–≤–∏–¥–∫–µ –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è –§—É—Ä'—î (FFT)
psi_k = fft(psi_x_sq)
psi_k_sq = np.abs(psi_k)**2
psi_k_sq = psi_k_sq / np.sum(psi_k_sq) # –ù–æ—Ä–º—É—î–º–æ

# 4. –°—Ç–≤–æ—Ä—é—î–º–æ –ø—Ä–æ—Å—Ç—ñ—Ä k (—Ö–≤–∏–ª—å–æ–≤–µ —á–∏—Å–ª–æ)
# k = 2*pi / L
dx = x[1] - x[0]
k = fftfreq(N, d=dx) * 2 * np.pi

# 5. –°—Ç–≤–æ—Ä—é—î–º–æ –ø—Ä–æ—Å—Ç—ñ—Ä p (—ñ–º–ø—É–ª—å—Å)
# p = hbar * k
p = const.hbar * k

# –í–∞–∂–ª–∏–≤–æ! –í—ñ–¥—Ü–µ–Ω—Ç—Ä—É–≤–∞—Ç–∏ k —ñ p –¥–ª—è –≥—Ä–∞—Ñ—ñ–∫–∞
k_shifted = fftshift(k)
p_shifted = fftshift(p)
psi_k_sq_shifted = fftshift(psi_k_sq)

# 6. –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –Ω–µ–≤–∏–∑–Ω–∞—á–µ–Ω–æ—Å—Ç–µ–π
# –î–ª—è –ì–∞—É—Å—Å–æ–≤–æ–≥–æ –ø–∞–∫–µ—Ç—É: delta_x (–∑–∞–¥–∞–Ω–æ)
# delta_k = 1 / (2 * delta_x)
delta_k_calc = 1 / (2 * delta_x)
# delta_p = hbar * delta_k
delta_p_calc = const.hbar * delta_k_calc
product = delta_x * delta_p_calc
hbar_2 = const.hbar / 2

# --- –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è ---
st.header("–¢–µ–æ—Ä–µ—Ç–∏—á–Ω—ñ –Ω–µ–≤–∏–∑–Ω–∞—á–µ–Ω–æ—Å—Ç—ñ")
col1, col2 = st.columns(2)
col1.metric("–ó–∞–¥–∞–Ω–∞ –Ω–µ–≤–∏–∑–Ω–∞—á–µ–Ω—ñ—Å—Ç—å (Œîx)", f"{delta_x_pm:.1f} –ø–º")
col2.metric("–†–æ–∑—Ä–∞—Ö—É–Ω–∫–æ–≤–∞ (Œîp)", f"{delta_p_calc:.2e} –∫–≥¬∑–º/—Å")

st.subheader("–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–ø—ñ–≤–≤—ñ–¥–Ω–æ—à–µ–Ω–Ω—è")
st.metric(f"–î–æ–±—É—Ç–æ–∫ (Œîx ¬∑ Œîp)", f"{product:.2e}")
st.metric(f"–¢–µ–æ—Ä–µ—Ç–∏—á–Ω–∏–π –º—ñ–Ω—ñ–º—É–º (ƒß/2)", f"{hbar_2:.2e}")
if product < hbar_2:
     st.error("–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫!")
else:
     st.success("–°–ø—ñ–≤–≤—ñ–¥–Ω–æ—à–µ–Ω–Ω—è –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è!")

st.info("–°–ø—Ä–æ–±—É–π—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏ Œîx: —è–∫—â–æ –ø–∞–∫–µ—Ç '–≤—É–∑—å–∫–∏–π' —É –ø—Ä–æ—Å—Ç–æ—Ä—ñ (–º–∞–ª–µ Œîx), –≤—ñ–Ω —Å—Ç–∞—î '—à–∏—Ä–æ–∫–∏–º' –≤ —ñ–º–ø—É–ª—å—Å—ñ (–≤–µ–ª–∏–∫–µ Œîp), —ñ –Ω–∞–≤–ø–∞–∫–∏.")

# --- –ì—Ä–∞—Ñ—ñ–∫–∏ ---
x_plot_pm = x * 1e12 # x –≤ –ø—ñ–∫–æ–º–µ—Ç—Ä–∞—Ö

# –ì—Ä–∞—Ñ—ñ–∫ 1: –ü—Ä–æ—Å—Ç—ñ—Ä –ø–æ–ª–æ–∂–µ–Ω—å
st.subheader("–ì—É—Å—Ç–∏–Ω–∞ –π–º–æ–≤—ñ—Ä–Ω–æ—Å—Ç—ñ –≤ –ø—Ä–æ—Å—Ç–æ—Ä—ñ –ø–æ–ª–æ–∂–µ–Ω—å |Œ®(x)|¬≤")
fig1 = go.Figure()
fig1.add_trace(go.Scatter(x=x_plot_pm, y=psi_x_sq, mode='lines', name='|Œ®(x)|¬≤'))
fig1.update_layout(
    xaxis_title="–ü–æ–ª–æ–∂–µ–Ω–Ω—è (x), –ø–º",
    yaxis_title="–ô–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å"
)
fig1.update_xaxes(range=[-delta_x_pm * 5, delta_x_pm * 5])
st.plotly_chart(fig1, use_container_width=True)


# –ì—Ä–∞—Ñ—ñ–∫ 2: –ü—Ä–æ—Å—Ç—ñ—Ä —ñ–º–ø—É–ª—å—Å—ñ–≤
st.subheader("–ì—É—Å—Ç–∏–Ω–∞ –π–º–æ–≤—ñ—Ä–Ω–æ—Å—Ç—ñ –≤ –ø—Ä–æ—Å—Ç–æ—Ä—ñ —ñ–º–ø—É–ª—å—Å—ñ–≤ |Œ¶(p)|¬≤")
fig2 = go.Figure()
fig2.add_trace(go.Scatter(x=p_shifted, y=psi_k_sq_shifted, mode='lines', 
                         line=dict(color='red'), name='|Œ¶(p)|¬≤'))
fig2.update_layout(
    xaxis_title="–Ü–º–ø—É–ª—å—Å (p), –∫–≥¬∑–º/—Å",
    yaxis_title="–ô–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å"
)
# –û–±–º–µ–∂—É—î–º–æ –¥—ñ–∞–ø–∞–∑–æ–Ω –¥–ª—è –≥–∞—Ä–Ω–æ–≥–æ –≤–∏–≥–ª—è–¥—É
p_plot_range = delta_p_calc * 5
fig2.update_xaxes(range=[-p_plot_range, p_plot_range])
st.plotly_chart(fig2, use_container_width=True)